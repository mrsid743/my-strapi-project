# This GitHub Actions workflow automates the infrastructure deployment using Terraform.
# It must be triggered manually and will apply the Terraform configuration to
# create an EC2 instance that runs the Strapi Docker container from ECR.

name: CD - Deploy to EC2 with Terraform

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to deploy'
        required: true
        default: 'latest'

jobs:
  terraform-deploy:
    name: Deploy with Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0 # Specify a Terraform version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1 # Mumbai

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var="image_tag=${{ github.event.inputs.image_tag }}"
        # Pass the GitHub secrets directly to terraform apply command
        env:
          TF_VAR_key_name: ${{ secrets.TF_VAR_key_name }}
          TF_VAR_sg_id: ${{ secrets.TF_VAR_sg_id }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -var="image_tag=${{ github.event.inputs.image_tag }}"
        env:
          TF_VAR_key_name: ${{ secrets.TF_VAR_key_name }}
          TF_VAR_sg_id: ${{ secrets.TF_VAR_sg_id }}
