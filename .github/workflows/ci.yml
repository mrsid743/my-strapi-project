# This GitHub Actions workflow automates the process of building a Docker image
# for the Strapi application, tagging it, and pushing it to AWS ECR.
# It is triggered on every push to the 'main' branch.

name: CI - Build and Push Strapi Image

on:
  push:
    branches:
      - main

# Environment variables available to all jobs
env:
  ECR_REPOSITORY: strappi-siddhant
  AWS_REGION: ap-south-1 # Mumbai

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write # Required for configuring AWS credentials

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }} # Use the commit SHA for a unique tag
          LATEST_TAG: latest # Also tag as 'latest' for easy deployment
        run: |
          # Build the docker image and tag it with the commit SHA and 'latest'
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG .
          
          # Push both tags to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG
          
          # Output the image URI for other jobs or reference
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG" >> $GITHUB_OUTPUT
